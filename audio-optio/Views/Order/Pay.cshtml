@using audio_optio.Domain;
@model audio_optio.Models.PaymentModel

<style>
    label {
        font-weight: bold;
    }
</style>

@using (Html.BeginForm("Create", "Checkouts", FormMethod.Post, new { id = "payment-form" }))
{
    if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
    {
        <div class="alert alert-danger" role="alert">
            <a class="close" data-dismiss="alert">×</a>
            @foreach (ModelError modelError in Html.ViewData.ModelState.SelectMany(keyValuePair => keyValuePair.Value.Errors))
            {
                <p>@modelError.ErrorMessage</p>
            }
        </div>
    }

    <div>
        <h2>Order Information</h2>
        @Html.HiddenFor(m => m.contactOrder.contact.Id)
        @Html.HiddenFor(m => m.contactOrder.order.Id)
        <div class="row">
            <div class="col-md-3">@Html.Label("Name")</div>
            <div class="col-md-9">@Model.contactOrder.contact.FirstName @Model.contactOrder.contact.LastName</div>
            @Html.HiddenFor(m => m.contactOrder.contact.FirstName)
            @Html.HiddenFor(m => m.contactOrder.contact.LastName)
        </div>

        <div class="row">
            <div class="col-md-3">@Html.Label("E-mail Address")</div>
            <div class="col-md-9">@Model.contactOrder.contact.Email</div>
            @Html.HiddenFor(m => m.contactOrder.contact.Email)
        </div>

        <div class="row">
            <div class="col-md-3">@Html.Label("Phone Number")</div>
            <div class="col-md-9">@Model.contactOrder.contact.Phone</div>
            @Html.HiddenFor(m => m.contactOrder.contact.Phone)
        </div>

        <div class="row">
            <div class="col-md-3">@Html.Label("Song")</div>
            <div class="col-md-9">@Model.contactOrder.order.Song.ToString()</div>
            @Html.HiddenFor(m => m.contactOrder.order.Song)
        </div>

        <div class="row">
            <div class="col-md-3">@Html.Label("Comments")</div>
            <div class="col-md-9">@Model.contactOrder.order.Comments</div>
            @Html.HiddenFor(m => m.contactOrder.order.Comments)
        </div>

        <div class="row">
            <div class="col-md-3">@Html.Label("Date")</div>
            <div class="col-md-9">@Model.contactOrder.order.DateSubmitted.ToString("MM/dd/YYYY")</div>
            @Html.HiddenFor(m => m.contactOrder.order.DateSubmitted)
        </div>

        <div class="row">
            <div class="col-md-3">@Html.Label("Canvas Size")</div>
            <div class="col-md-9">@Order.GetCanvasDescription(@Model.contactOrder.order.Size)</div>
            @Html.HiddenFor(m => m.contactOrder.order.Size)
        </div>

        <div class="row">
            <div class="col-md-3">@Html.Label("Order Total")</div>
            <div class="col-md-9">$@Model.Price USD</div>
            @Html.HiddenFor(m => m.Price)
        </div>

        @if (Model.discountApplied)
        {
            <div class="row">
                <div class="col-md-12 alert alert-success">
                    30% discount applied!
                </div>
            </div>
        }

    </div>

    <hr />

    <div id="billing_address">
        <h2>Billing Address</h2>
        <div class="row">
            <div class="col-md-3"><label>Name</label></div>
            <div class="col-md-9">
                @Html.TextBoxFor(model => model.BillingName, new { @class = "form-control" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-3"><label>Address Line 1</label></div>
            <div class="col-md-9">
                @Html.TextBoxFor(model => model.BillingAddress.line1, new { @class = "form-control" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-3"><label>Address Line 2</label></div>
            <div class="col-md-9">
                @Html.TextBoxFor(model => model.BillingAddress.line2, new { @class = "form-control" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-1"><label>City</label></div>
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.BillingAddress.city, new { @class = "form-control" })
            </div>
            <div class="col-md-1"><label>State</label></div>
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.BillingAddress.state,
               Enum.GetValues(typeof(audio_optio.Models.PaymentModel.State)).Cast<audio_optio.Models.PaymentModel.State>().Select(v => new SelectListItem
               {
                   Text = v.ToString(),
                   Value = v.ToString()
               }).ToList(), new { @class = "form-control" })
            </div>
            <div class="col-md-1"><label>Postal Code</label></div>
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.BillingAddress.postal_code, new { @class = "form-control" })
                @Html.HiddenFor(model => model.BillingAddress.country_code)
            </div>
        </div>
    </div>


    <hr />

    <div>
        <h2>Shipping Address</h2>
        @Html.CheckBoxFor(m => m.sameAddress, new { id = "same" })<span> <label>Same as Billing Address</label></span>

        <div id="shipping_address">
            <div class="row">
                <div class="col-md-3"><label>Name</label></div>
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.ShippingName, new { @class = "form-control" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-3"><label>Address Line 1</label></div>
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.ShippingAddress.line1, new { @class = "form-control" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-3"><label>Address Line 2</label></div>
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.ShippingAddress.line2, new { @class = "form-control" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-2"><label>City</label></div>
                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.ShippingAddress.city, new { @class = "form-control" })
                </div>
                <div class="col-md-2"><label>State</label></div>
                <div class="col-md-2">
                    @Html.DropDownListFor(model => model.ShippingAddress.state, EnumHelper.GetSelectList(typeof(audio_optio.Models.PaymentModel.State)),
   new { @class = "form-control" })
                </div>
                <div class="col-md-2"><label>Postal Code</label></div>
                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.ShippingAddress.postal_code, new { @class = "form-control" })
                    @Html.HiddenFor(model => model.ShippingAddress.country_code)
                </div>
            </div>
        </div>
    </div>


    <hr />

    <div class="wrapper">
        <div class="checkout container">
            <section>
                <div class="bt-drop-in-wrapper">
                    <div id="bt-dropin"></div>
                </div>
            </section>
            <input id="nonce" name="payment_method_nonce" type="hidden" />
            <button class="button transition-button" type="submit"><span>Submit</span></button>
        </div>
    </div>
}
<script src="https://js.braintreegateway.com/web/dropin/1.8.0/js/dropin.min.js"></script>
<script>

    var client_token = "@ViewBag.ClientToken";
    var form = document.querySelector('#payment-form');

    braintree.dropin.create({
        authorization: client_token,
        container: '#bt-dropin',
        paypal: {
            //flow: 'vault'
            flow: 'checkout'
        }
    }, function (createErr, instance) {
        form.addEventListener('submit', function (event) {
            event.preventDefault();

            instance.requestPaymentMethod(function (err, payload) {
                if (err) {
                    console.log('Error', err);
                    return;
                }

                // Add the nonce to the form and submit
                document.querySelector('#nonce').value = payload.nonce;
                form.submit();
            });
        });
    });

</script>
<script src="~/Scripts/PayViewToggle.js"></script>